---
trigger:
  - main
variables:
  DOCKER_IMAGE: sharmila79/dummy-maven-project
  DOCKER_CREDENTIALS_ID: docker-id
  KUBECONFIG_CREDENTIALS_ID: kubernetes-id
pool:
  name: Default
  demands:
    - agent.name -equals sqagentpool
stages:
  - stage: CloneCode
    jobs:
      - job: CloneCode
        steps:
          - checkout: self
            clean: true
  - stage: BuildProject
    jobs:
      - job: BuildProject
        steps:
          - task: Maven@3
            inputs:
              mavenPomFile: pom.xml
              goals: clean package
              options: -X
  - stage: RunUnitTests
    jobs:
      - job: RunUnitTests
        steps:
          - task: Maven@3
            inputs:
              mavenPomFile: pom.xml
              goals: test
              options: -X

  - stage: SonarQubeAnalysis
    jobs:
    - job: SonarQubeAnalysis
      steps:
      - task: SonarQubePrepare@5
        inputs:
          SonarQube: 'sonar'
          scannerMode: 'CLI'
          configMode: 'file'
          configFile: 'sonar-project.properties'

    - script: mvn clean verify sonar:sonar
      displayName: 'Build and Analyze with Maven'
      env:
        SONAR_HOST_URL: 'http://4.213.193.176:9000'
        SONAR_LOGIN: 'sqp_a36bef0658104dd34bc87100dea945739dc4c997'

    - task: SonarQubePublish@5
      inputs:
        pollingTimeoutSec: '300'
  - stage: BuildDockerImage
    jobs:
      - job: BuildDockerImage
        steps:
          - script: docker build -t $(DOCKER_IMAGE) .
  - stage: PushDockerImagetoDockerHub
    jobs:
      - job: PushDockerImagetoDockerHub
        steps:
          - task: Docker@2
            inputs:
              containerRegistry: $(DOCKER_CREDENTIALS_ID)
              repository: $(DOCKER_IMAGE)
              command: push
              tags: latest
  - stage: DeploytoAKS
    jobs:
      - job: DeploytoAKS
        steps:
          - task: Kubernetes@1
            inputs:
              connectionType: Azure Resource Manager
              azureSubscriptionEndpoint: my-azure-connection
              azureResourceGroup: rg-demo1
              kubernetesCluster: k8s-sqdemo
              namespace: default
              command: apply
              arguments: -f deployment.yaml
